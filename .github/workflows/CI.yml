name: Java Build & Publish

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    name: Build and Publish with Java 21
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: gradle

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build project
        run: ./gradlew build --no-daemon

      - name: Check for 'internal' PR label
        id: check_label
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const commitSha = context.sha;
            const { data: prs } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: commitSha
            });

            if (prs.length === 0) {
              core.info("No PR found for this commit.");
              return "";
            }

            const labels = prs[0].labels.map(label => label.name);
            core.info(`Labels found: ${labels.join(", ")}`);
            return labels.join(","); // Return as comma-separated string

      - name: Publish to GitHub Packages
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' && !contains(steps.check_label.outputs.result, 'internal') }}
        run: ./gradlew publishToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}
